const fetch = require('node-fetch');

exports.handler = async (event, context) => {
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: 'Method Not Allowed' };
  }

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ Chat ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Netlify
  const { BOT_TOKEN, CHAT_ID } = process.env;

  // --- –ù–ê–ß–ê–õ–û –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ---
  console.log('--- DIAGNOSTIC LOGS ---');
  console.log('BOT_TOKEN:', BOT_TOKEN ? `–ù–∞–π–¥–µ–Ω, –¥–ª–∏–Ω–∞: ${BOT_TOKEN.length}` : '–ù–ï –ù–ê–ô–î–ï–ù');
  console.log('CHAT_ID:', CHAT_ID ? `–ù–∞–π–¥–µ–Ω, –∑–Ω–∞—á–µ–Ω–∏–µ: ${CHAT_ID}` : '–ù–ï –ù–ê–ô–î–ï–ù');
  console.log('--- END DIAGNOSTIC LOGS ---');
  // --- –ö–û–ù–ï–¶ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ---
  
  const data = JSON.parse(event.body);

  const { firstName, lastName, email, contact } = data;


  const message = `üìù *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ OZON!*\n\n` +
                  `üë§ *–ò–º—è:* ${firstName}\n` +
                  `üë§ *–§–∞–º–∏–ª–∏—è:* ${lastName}\n` +
                  `üìß *Email:* ${email}\n` +
                  `üì± *Telegram:* ${contact}\n\n` +
                  `‚è∞ *–î–∞—Ç–∞:* ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`;

  const telegramUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;

  try {
    const response = await fetch(telegramUrl, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text: message,
        parse_mode: 'Markdown',
      }),
    });

    if (!response.ok) {
      throw new Error(`Telegram API error: ${response.statusText}`);
    }

    return {
      statusCode: 200,
      body: JSON.stringify({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' }),
    };
  } catch (error) {
    console.error(error);
    return {
      statusCode: 500,
      body: JSON.stringify({ success: false, message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏.' }),
    };
  }
}; 